library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity TimerN is

	generic(N : positive)
	port map(start : in std_logic;
				reset : in std_logic;
				clk : in std_logic;
				enable : in std_logic;
				timerOut : out std_logic);

end TimerN;

architecture Behavioral of TimerN is

	signal s_count : integer(std_logic(unsigned));

begin

	process(clk)
		begin
		
			if rising_edge(clk) then
				if reset = '1' then
					timerOut <= (others => '0');
				elsif enable = '1' then
					if s_count = 0 and start = '1' then
						s_count = s_count + 1;
						timerOut = '1';
					elsif s_count = N then
						s_count <= 0;
						TimerOut <= '0';
					
				end if;
			end if;
			
	end process;
	
end Behavioral;